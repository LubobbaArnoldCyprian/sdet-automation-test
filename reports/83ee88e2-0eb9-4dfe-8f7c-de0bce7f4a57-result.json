{"name": "test_product", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"nav-hamburger-menu\"]\"}\n  (Session info: chrome=119.0.6045.124); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6480B82B2+55298]\n\t(No symbol) [0x00007FF648025E02]\n\t(No symbol) [0x00007FF647EE05AB]\n\t(No symbol) [0x00007FF647F2175C]\n\t(No symbol) [0x00007FF647F218DC]\n\t(No symbol) [0x00007FF647F5CBC7]\n\t(No symbol) [0x00007FF647F420EF]\n\t(No symbol) [0x00007FF647F5AAA4]\n\t(No symbol) [0x00007FF647F41E83]\n\t(No symbol) [0x00007FF647F1670A]\n\t(No symbol) [0x00007FF647F17964]\n\tGetHandleVerifier [0x00007FF648430AAB+3694587]\n\tGetHandleVerifier [0x00007FF64848728E+4048862]\n\tGetHandleVerifier [0x00007FF64847F173+4015811]\n\tGetHandleVerifier [0x00007FF6481547D6+695590]\n\t(No symbol) [0x00007FF648030CE8]\n\t(No symbol) [0x00007FF64802CF34]\n\t(No symbol) [0x00007FF64802D062]\n\t(No symbol) [0x00007FF64801D3A3]\n\tBaseThreadInitThunk [0x00007FFF3AD0257D+29]\n\tRtlUserThreadStart [0x00007FFF3C18AA78+40]", "trace": "self = <testCases.test_productPage.Test_001_Product object at 0x000001AA7AD69A10>, setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ffa8220a680dcf5d504a031be4987383\")>\n\n    def test_product(self, setup):\n        self.driver = setup\n        self.driver.get(self.baseURL)\n        self.product = ProductPage(self.driver)\n>       self.product.click_all_menu()\n\ntestCases\\test_productPage.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\ProductPage.py:35: in click_all_menu\n    self.driver.find_element(By.ID, self.all_menu_id).click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001AA78819610>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF64801D3A3]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF3AD0257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFF3C18AA78+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"nav-hamburger-menu\"]\"}\nE         (Session info: chrome=119.0.6045.124); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6480B82B2+55298]\nE       \t(No symbol) [0x00007FF648025E02]\nE       \t(No symbol) [0x00007FF647EE05AB]\nE       \t(No symbol) [0x00007FF647F2175C]\nE       \t(No symbol) [0x00007FF647F218DC]\nE       \t(No symbol) [0x00007FF647F5CBC7]\nE       \t(No symbol) [0x00007FF647F420EF]\nE       \t(No symbol) [0x00007FF647F5AAA4]\nE       \t(No symbol) [0x00007FF647F41E83]\nE       \t(No symbol) [0x00007FF647F1670A]\nE       \t(No symbol) [0x00007FF647F17964]\nE       \tGetHandleVerifier [0x00007FF648430AAB+3694587]\nE       \tGetHandleVerifier [0x00007FF64848728E+4048862]\nE       \tGetHandleVerifier [0x00007FF64847F173+4015811]\nE       \tGetHandleVerifier [0x00007FF6481547D6+695590]\nE       \t(No symbol) [0x00007FF648030CE8]\nE       \t(No symbol) [0x00007FF64802CF34]\nE       \t(No symbol) [0x00007FF64802D062]\nE       \t(No symbol) [0x00007FF64801D3A3]\nE       \tBaseThreadInitThunk [0x00007FFF3AD0257D+29]\nE       \tRtlUserThreadStart [0x00007FFF3C18AA78+40]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1699912237424, "stop": 1699912251932, "uuid": "4ca70abf-956c-442d-a48d-db1df2e326e1", "historyId": "78b7230639cbd94e415b622d07dd6ad2", "testCaseId": "78b7230639cbd94e415b622d07dd6ad2", "fullName": "testCases.test_productPage.Test_001_Product#test_product", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_productPage"}, {"name": "subSuite", "value": "Test_001_Product"}, {"name": "host", "value": "carl"}, {"name": "thread", "value": "20976-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_productPage"}]}